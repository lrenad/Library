/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Library;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.SwingConstants;

/**
 *
 * @author End-user
 */
public class Guest extends javax.swing.JFrame {
Connection con;
//     Connection con1;
//          Connection con2;
          Connection con4;

    Statement st;
///    PreparedStatement pst;
//        PreparedStatement pst1;
//    PreparedStatement pst2;
//
    ResultSet rs;
    ResultSet rs4;
    Statement st4;
//    ResultSet rs2;
//    Statement st2;
//        Statement stq;
//    Statement st3;
//    
//        ResultSet rs3;
//        ResultSet rsq;
    /**
     * Creates new form Guest
     */
    public Guest() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jj = new javax.swing.JPanel();
        p = new java.awt.Panel();
        jLabel4 = new javax.swing.JLabel();
        firstcom = new javax.swing.JComboBox<>();
        secondcom = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jj.setBackground(new java.awt.Color(142, 182, 172));
        jj.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
        jj.add(p, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 510, 470));

        jLabel4.setText("Filter by:");
        jj.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 187, 65, -1));

        firstcom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All Books", "Study Books", "General Books", "Author", "Price", "Section" }));
        firstcom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                firstcomItemStateChanged(evt);
            }
        });
        firstcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstcomActionPerformed(evt);
            }
        });
        jj.add(firstcom, new org.netbeans.lib.awtextra.AbsoluteConstraints(105, 184, -1, -1));

        secondcom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                secondcomItemStateChanged(evt);
            }
        });
        secondcom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondcomActionPerformed(evt);
            }
        });
        jj.add(secondcom, new org.netbeans.lib.awtextra.AbsoluteConstraints(238, 184, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Library/background.jpg"))); // NOI18N
        jLabel13.setMaximumSize(new java.awt.Dimension(1962, 1080));
        jj.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 600, 149));

        jButton3.setBackground(new java.awt.Color(152, 175, 172));
        jButton3.setFont(new java.awt.Font("Sitka Text", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Back");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jj.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, -1, -1));

        jScrollPane2.setViewportView(jj);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 797, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void firstcomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_firstcomItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_firstcomItemStateChanged

    private void firstcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstcomActionPerformed

        if(firstcom.getSelectedItem().equals("All Books")){
            All_Books();
            secondcom.removeAllItems();
            secondcom.setSelectedIndex(-1);
            secondcom.setSelectedItem(null);
            secondcom.setVisible(false);
        }
        else if(firstcom.getSelectedItem()=="Study Books"){
            secondcom.removeAllItems();
            secondcom.setSelectedIndex(-1);
            secondcom.setSelectedItem(null);
            secondcom.setVisible(false);

            Study_Books();
        }
        else if(firstcom.getSelectedItem()=="General Books")
        {
            secondcom.removeAllItems();
            secondcom.setSelectedIndex(-1);
            secondcom.setSelectedItem(null);
            generalBook();
            secondcom.setVisible(false);

        }
        else if(firstcom.getSelectedItem()=="Author")
        {

            secondcom.removeAllItems();

            try{
                con4=mainclass.createConnection();
                st4=con4.createStatement();
                rs4=st4.executeQuery("Select distinct Author from book_table");
                while(rs4.next()){
                    secondcom.addItem(rs4.getString("Author"));}
                secondcom.setVisible(true);}
            catch(SQLException e){
                JOptionPane.showMessageDialog(null, e.getMessage());
            }
            finally{
                if (rs4!=null){
                    try{rs4.close();
                    }catch(SQLException e){
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }}if (st4!=null){
                        try{st4.close();
                        }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }}if (con4!=null){
                            try{con4.close();
                            }catch(SQLException e){
                                JOptionPane.showMessageDialog(null, e.getMessage());
                            }

                        }}
                        //
                    }
                    else if (firstcom.getSelectedItem()=="Section")
                    {
                        secondcom.setVisible(true);

                        secondcom.removeAllItems();
                        secondcom.setSelectedIndex(-1);
                        secondcom.setSelectedItem(null);

                        secondcom.addItem("Engineering");
                        secondcom.addItem("CS");
                        secondcom.addItem("Poetry");
                        secondcom.addItem("Crime");
                        secondcom.addItem("Story");

                        SectionBook1();

                    }
                    else if(firstcom.getSelectedItem()=="Price")
                    {
                        secondcom.setVisible(true);

                        secondcom.removeAllItems();
                        secondcom.setSelectedIndex(-1);
                        secondcom.setSelectedItem(null);

                        secondcom.addItem("Less than 50 SAR");
                        secondcom.addItem("Less than 100 SAR");
                        secondcom.addItem("Less than 200 SAR");

                    }
    }//GEN-LAST:event_firstcomActionPerformed

    private void secondcomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_secondcomItemStateChanged
        // TODO add your handling code here:

    }//GEN-LAST:event_secondcomItemStateChanged
public void BookPrice1()
          {
              try{
                String query="select * from book_table where Price BETWEEN 0 AND 50 AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
         
          }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
             
}
       
     public void BookPrice2()
          {
              try{
                String query="select * from book_table where Price BETWEEN 0 AND 100 AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }
      public void BookPrice3()
          {
              try{
                String query="select * from book_table where Price BETWEEN 0 AND 200 AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }
    private void All_Books(){
           
            try{
                secondcom.setVisible(false);
                String query="select * from book_table where quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
            p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
            con=mainclass.createConnection();
            st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
}
          private void Study_Books(){
              try{
                String query="select * from book_table where Type_of_book='STUDY' AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }
          public void SectionBook1()
          {
              try{
                String query="select * from book_table where Section='Engineering' AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }
          public void SectionBook2()
          {
              try{
                String query="select * from book_table where Section='CS' AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());
              }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }}
           public void SectionBook3()
          {
              try{
                String query="select * from book_table where Section='POETRY' AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}  
          }
                  public void SectionBook4()
          {
              try{
                String query="select * from book_table where Section='CRIME' AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }
            public void SectionBook5()
          {
              try{
                String query="select * from book_table where Section='STORY' AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }   
          
          
          public void generalBook()
          {
               try{
                String query="select * from book_table where Type_of_book='GENERAL' AND quantity<>0";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}} 
          }
          
       
          
          public void AuthorsBook(String author)
          {
               try{
                String query="select * from book_table where quantity<>0 AND Author='"+author+"'";
                p.removeAll();
                p.revalidate();
                p.repaint();
                p.setLayout(new java.awt.GridLayout(4, 4, 2, 2));
                con=mainclass.createConnection();
                  st=con.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
            rs=st.executeQuery(query);
  
            int rows=0;
            rs.last();
            rows=rs.getRow(); 
            JLabel[]books=new JLabel[rows];
            rs.beforeFirst();
            while(rs.next()){
            for(int i=0;i<1;i++){
            books[i]=new JLabel(rs.getString("Price")+" SAR",new javax.swing.ImageIcon(getClass().getResource(rs.getString("cover"))),SwingConstants.LEFT);
               books[i].setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
               books[i].setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM); 
               books[i].setMinimumSize(new java.awt.Dimension(500, 120));
               books[i].setMaximumSize(new java.awt.Dimension(500, 120));
               books[i].setPreferredSize(new java.awt.Dimension(500, 120));
               books[i].setFont(new java.awt.Font("Verdana Pro Cond",0, 12));
               p.add(books[i]);
   
        }}}
        catch(SQLException ex){
            JOptionPane.showMessageDialog(null, ex);
        }finally{
         if (rs!=null) 
             try{rs.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (st!=null) 
             try{st.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}
         if (con!=null) 
             try{con.close();
             }catch(SQLException e){
                            JOptionPane.showMessageDialog(null, e.getMessage());}}
          }
    private void secondcomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_secondcomActionPerformed
        if(firstcom.getSelectedItem()=="Author"){
            AuthorsBook(secondcom.getSelectedItem().toString());}
        if(secondcom.getSelectedItem()=="CS"){
            SectionBook2();
        }
        if(secondcom.getSelectedItem()=="Engineering"){
            SectionBook1();
        }
        if(secondcom.getSelectedItem()=="Crime"){
            SectionBook4();
        }
        if(secondcom.getSelectedItem()=="Story"){
            SectionBook5();
        }
        if(secondcom.getSelectedItem()=="Poetry"){
            SectionBook3();
        }
        if(secondcom.getSelectedItem()=="Less than 50 SAR"){
            BookPrice1();
        }if(secondcom.getSelectedItem()=="Less than 100 SAR"){
            BookPrice2();
        }
        if(secondcom.getSelectedItem()=="Less than 200 SAR"){
            BookPrice3();
        }

    }//GEN-LAST:event_secondcomActionPerformed

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        Login lg=new Login();
        lg.setVisible(true);
        this.setVisible(false);
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Guest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Guest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Guest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Guest.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Guest().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> firstcom;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jj;
    private java.awt.Panel p;
    private javax.swing.JComboBox<String> secondcom;
    // End of variables declaration//GEN-END:variables
}
